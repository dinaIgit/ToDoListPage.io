{"version":3,"sources":["config/firbase-config.js","service/authService.js","todo_store/appReducer/AppReducer.js","service/todoService.js","todo_store/todoReducer/TodoReducer.js","components/Header.js","components/TodoList.js","components/Loader.js","todo_store/authReducer.js","components/Auth.js","App.js","todo_store/store.js","index.js"],"names":["fb","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","login","email","pass","signInWithEmailAndPassword","response","console","log","localStorage","setItem","user","uid","message","Promise","reject","registration","createUserWithEmailAndPassword","logout","a","signOut","removeItem","appReducer","createSlice","name","initialState","isLoading","reducers","startLoading","state","stopLoading","authSuccess","getItem","appLogout","actions","appSelector","app","addTodoItem","title","docRef","doc","getDoc","exists","updateDoc","todos","arrayUnion","status","setDoc","getAllTodos","docData","data","changeTodos","todoReducer","setTodo","payload","addTodo","push","changeTodoStatus","index","removeTodo","splice","clearTodo","todoSelector","todo","Header","useState","input","setInput","dispatch","useDispatch","className","action","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","TodoList","useSelector","useEffect","map","checked","newTodos","newTodo","updateTodoStatusAction","style","textDecoration","onClick","removeTodoAction","marginLeft","Loader","error","setError","clearError","errorSelector","Auth","setState","onChangeHandler","App","rootReducer","combineReducers","TodoReducer","AppReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b2004c1.chunk.js","sourcesContent":["//import firebase from \"firebase/compat\";\n//import 'firebase/auth'\n//import {initializeApp} from \"firebase/firebase-app\";\nimport {initializeApp} from \"firebase/app\";\nimport {getFirestore} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyADNhiQGsN02HUwCUpRQU8MVbj9hK7_cN4\",\n    authDomain: \"personaltodo-d48e4.firebaseapp.com\",\n    projectId: \"personaltodo-d48e4\",\n    storageBucket: \"personaltodo-d48e4.appspot.com\",\n    messagingSenderId: \"372240948166\",\n    appId: \"1:372240948166:web:587088465a8c2cc6ba70c7\"\n};\n\nexport const fb = initializeApp(firebaseConfig)\nexport const db = getFirestore(fb)\n//export const fb = initializeApp(firebaseConfig);\n//export const fbAuth = firebase.auth()","import {fb} from \"../config/firbase-config\";\nimport {getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut} from \"firebase/auth\";\n\nconst auth = getAuth(fb)\n\nexport const login = async (email, pass) => {\n    try {\n        const response = await signInWithEmailAndPassword(auth, email, pass);\n        console.log(response)\n        localStorage.setItem('USER_ID', response.user.uid)\n    } catch (error) {\n        console.log(error.message)\n        await Promise.reject(error)\n    }\n}\n\nexport const registration = async (email, pass) => {\n    try {\n        const response = await createUserWithEmailAndPassword(auth, email, pass);\n        console.log(response)\n        localStorage.setItem('USER_ID', response.user.uid)\n    } catch (error) {\n        console.log(error.message)\n        await Promise.reject(error)\n    }\n}\n\nexport const logout = async () => {\n    console.log('logout service')\n    try {\n        await signOut(auth)\n        localStorage.removeItem('USER_ID')\n    }catch (error) {\n        console.log(error.message)\n        await Promise.reject(error)\n    }\n}\n\n/*\nexport async function login(email, pass) {\n    try {\n        const response = await signInWithEmailAndPassword(auth, email, pass);\n        console.log(response)\n        localStorage.setItem('USER_ID', response.user.uid)\n    } catch (error) {\n        console.log(error.message)\n        await Promise.reject(error)\n    }\n}\nexport async function registration(email, pass) {\n    try {\n        const response = await createUserWithEmailAndPassword(auth, email, pass);\n        console.log(response)\n        localStorage.setItem('USER_ID', response.user.uid)\n    } catch (error) {\n        console.log(error.message)\n        await Promise.reject(error)\n    }\n}\n*/\n","import {createSlice} from \"@reduxjs/toolkit\";\nimport {logout} from \"../../service/authService\";\n\nconst initialState = {\n    isLoading: false,\n    auth: false\n}\n\nconst appReducer = createSlice({\n    name: 'app',\n    initialState,\n    reducers: {\n        startLoading: state => {\n            state.isLoading = true\n        },\n        stopLoading: state => {\n            state.isLoading = false\n        },\n        authSuccess: state => {\n            state.auth = localStorage.getItem('USER_ID') != null\n        },\n        appLogout: state => {\n            state.auth = false\n        }\n    }\n})\n\nexport default appReducer.reducer;\nexport const {startLoading, stopLoading, authSuccess, appLogout} = appReducer.actions;\nexport const appSelector = state => state.app;\n\nexport const logoutAction = () => {\n    console.log('Logout')\n    return async dispatch => {\n        dispatch(startLoading())\n        try {\n            await logout()\n            dispatch(appLogout())\n        } catch (error) {\n            console.log(error.message)\n        } finally {\n            dispatch(stopLoading())\n        }\n    }\n}","import {db} from '../config/firbase-config'\nimport {doc, getDoc, arrayUnion, updateDoc, setDoc} from \"firebase/firestore\";\n\nexport const addTodoItem = async (title, uid) => {\n    try {\n        const docRef = doc(db, 'todos', uid)  //база данных, коллекция 'todos', юзер id\n        const docData = await getDoc(docRef)\n        if (docData.exists()) {\n            await updateDoc(docRef, {\n                todos: arrayUnion({\n                    title,\n                    status: false\n                })\n            })\n        } else {\n            await setDoc(docRef, {todos: [{title, status: false}]})\n        }\n    } catch (error) {\n        console.log(error.message)\n    }\n}\n\nexport const getAllTodos = async (uid) => {\n    try {\n        const docRef = doc(db, 'todos', uid)\n        const docData = await getDoc(docRef)\n        if (docData.exists()) {\n            return docData.data();\n        }\n        return {todos: []}\n    } catch (error) {\n        console.log(error.message)\n    }\n}\n\nexport const changeTodos = async (todos, uid) => {\n    try {\n        const docRef = doc(db, 'todos', uid)\n        await updateDoc(docRef, {todos: [...todos]})\n    } catch (error) {\n        console.log(error.message)\n    }\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\nimport {startLoading, stopLoading} from \"../appReducer/AppReducer\";\nimport {addTodoItem, changeTodos, getAllTodos} from \"../../service/todoService\";\n\nconst initialState = {\n    todos: []\n}\n\nconst todoReducer = createSlice({\n    name: 'todo',\n    initialState,\n    reducers: {\n        setTodo: (state, {payload}) => {\n            state.todos = payload.todos\n        },\n        addTodo: (state, {payload}) => {\n            state.todos.push({title: payload.title, status: false})\n        },\n        changeTodoStatus: (state, {payload}) => {\n            console.log(payload)\n            state.todos[payload.index].status = payload.status\n        },\n        removeTodo: (state, {payload}) => {\n            state.todos.splice(payload.index, 1)\n        },\n        clearTodo: (state) => {\n            state.todos = []\n        }\n    }\n})\n\nexport const {addTodo, changeTodoStatus, removeTodo, setTodo, clearTodo} = todoReducer.actions;\nexport default todoReducer.reducer;\nexport const todoSelector = state => state.todo.todos;\n\nexport const addTodoAction = (title, uid) => {\n    return async dispatch => {\n        dispatch(startLoading())\n        try {\n            const response = await addTodoItem(title, uid)\n            console.log(response)\n            dispatch(addTodo({title}))\n\n        } catch (error) {\n            console.log(error.message)\n        } finally {\n            dispatch(stopLoading())\n        }\n    }\n}\nexport const getAllTodoAction = (uid) => {\n    return async dispatch => {\n        dispatch(startLoading())\n        try {\n            const response = await getAllTodos(uid)\n            dispatch(setTodo({todos: response.todos}))\n        } catch (error) {\n            console.log(error.message)\n        } finally {\n            dispatch(stopLoading())\n        }\n    }\n}\n\nexport const updateTodoStatusAction = (index, status, todos, uid) => {\n    return async dispatch => {\n        dispatch(startLoading())\n        try {\n            const newTodos = [...todos]\n            const newTodo = {title: todos[index].title, status}\n            newTodos.splice(index, 1, newTodo)\n            await changeTodos(newTodos, uid)\n            dispatch(changeTodoStatus({index, status}))\n\n        } catch (error) {\n            console.log(error.message)\n        } finally {\n            dispatch(stopLoading())\n        }\n    }\n}\n\nexport const removeTodoAction = (index, todos, uid) => {\n    return async dispatch => {\n        dispatch(startLoading())\n        try {\n            const newTodos = [...todos]\n            newTodos.splice(index, 1)\n            await changeTodos(todos, uid)\n            dispatch(removeTodo({index}))\n        } catch (error) {\n            console.log(error.message)\n        } finally {\n            dispatch(stopLoading())\n        }\n    }\n}\n\n","import {useDispatch} from 'react-redux'\nimport {addTodoAction} from '../todo_store/todoReducer/TodoReducer';\nimport {useState} from \"react\";\n\n\nconst Header = () => {\n    const [input, setInput] = useState('');\n    const dispatch=useDispatch();\n\n    return (\n        <form className='row' action='#'\n            onSubmit={e => {\n                e.preventDefault();\n                dispatch(addTodoAction(input, localStorage.getItem('USER_ID')));\n                setInput('')\n            }}>\n            <input type='text' name='text' placeholder=\"Type todo\" value={input}\n            onChange={e=>setInput(e.target.value)}/>\n            <button type='submit'>Add todo</button>\n        </form>\n    )\n}\n\nexport default Header","import {\n    updateTodoStatusAction,\n    removeTodoAction,\n    todoSelector,\n    getAllTodoAction,\n    clearTodo\n} from '../todo_store/todoReducer/TodoReducer';\nimport {useSelector, useDispatch} from \"react-redux\";\n//import {loginAction} from \"../todo_store/appReducer/AppReducer\";\nimport {logoutAction} from \"../todo_store/appReducer/AppReducer\";\nimport {useEffect} from \"react\";\n\n\nconst TodoList = () => {\n    const todos = useSelector(todoSelector);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getAllTodoAction(localStorage.getItem('USER_ID')))\n    }, [dispatch])\n\n    return (\n        <>\n            <ul>\n                {\n                    todos.map((todo, index) =>\n                        <li key={index}>\n                            <div className='row'>\n                                <input className='check_box' type=\"checkbox\"\n                                    checked={todo.status}\n                                    onChange={e => dispatch(updateTodoStatusAction(index, e.target.checked, todos, localStorage.getItem('USER_ID')))}/>\n                                <span\n                                    style={{textDecoration: todo.status ? 'line-through' : 'none'}}>{todo.title}</span>\n                                <button\n                                    onClick={() => dispatch(removeTodoAction(index, todos, localStorage.getItem('USER_ID')))}>Remove\n                                </button>\n                            </div>\n                        </li>)\n                }\n            </ul>\n            <div className='row'>\n                <button style={{marginLeft: 'auto'}} onClick={() => {\n                    dispatch(logoutAction())\n                    dispatch(clearTodo())\n                }}>Logout\n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default TodoList","export default function Loader(){\n    return (\n    <div className ='loader'>\n        <div className = 'lds-dual-ring' />\n    </div>)\n}","import {createSlice} from \"@reduxjs/toolkit\";\nimport {login, registration} from \"../service/authService\";\nimport {stopLoading, startLoading, authSuccess} from \"./appReducer/AppReducer\";\n\nconst initialState = {\n    error: null\n}\n\nconst auth = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setError: (state, {payload}) => {\n            state.error = payload\n        },\n        clearError: state => {\n            state.error = null\n        }\n    }\n})\n\nexport default auth.reducer;\nexport const {setError, clearError} = auth.actions;\nexport const errorSelector = state => state.auth.error;\n\nexport function loginAction(email, pass){\n    return async dispatch=>{\n        dispatch(startLoading())\n        dispatch(clearError())\n        try {\n            await login(email, pass);\n            dispatch(authSuccess());\n        }catch (error){\n            console.log(error)\n            dispatch(setError(error.message))\n        }finally {\n            dispatch(stopLoading())\n        }\n    }\n}\n\nexport function registrationAction(email, pass){\n    return async dispatch=>{\n        dispatch(startLoading())\n        dispatch(clearError())\n        try {\n            await registration(email, pass);\n            dispatch(authSuccess());\n        }catch (error){\n            console.log(error)\n            dispatch(setError(error.message))\n        }finally {\n            dispatch(stopLoading())\n        }\n    }\n}\n","import { useState } from \"react\";\nimport { loginAction, registrationAction } from \"../todo_store/authReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { errorSelector } from \"../todo_store/authReducer\";\n\nconst Auth = () => {\n  const [state, setState] = useState({ email: \"\", pass: \"\" });\n\n  const onChangeHandler = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const error = useSelector(errorSelector);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <h1>This project was created in Firebase React</h1>\n      <h2>To create a To-Do List you need to register.</h2>\n      <h3>\n        The password must contain at 6 symbols. If you want to test the To-Do\n        List without registering, use:\n      </h3>\n      <p>Login: admin@gmail.com </p>\n      <p>Password: 123456 </p>\n      {error && <h3>{error}</h3>}\n      <form className=\"row login\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"type your email\"\n          value={state.email}\n          onChange={(e) => {\n            onChangeHandler(e);\n          }}\n        />\n        <input\n          type=\"text\"\n          name=\"pass\"\n          placeholder=\"type your password\"\n          value={state.pass}\n          onChange={(e) => {\n            onChangeHandler(e);\n          }}\n        />\n        <div className=\"login-btns\">\n          <button\n            type=\"submit\"\n            name=\"reg\"\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(registrationAction(state.email, state.pass));\n              setState({ email: \"\", pass: \"\" });\n            }}\n          >\n            registration\n          </button>\n          <button\n            type=\"submit\"\n            name=\"login\"\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(loginAction(state.email, state.pass));\n              setState({ email: \"\", pass: \"\" });\n            }}\n          >\n            login\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default Auth;\n","import './App.css';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport Loader from './components/Loader';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {appSelector, authSuccess} from \"./todo_store/appReducer/AppReducer\";\nimport Auth from \"./components/Auth\";\nimport {useEffect} from \"react\";\n\nfunction App() {\n    const isLoading = useSelector(appSelector).isLoading;\n    const auth = useSelector(appSelector).auth;\n    const dispatch=useDispatch()\n\n    useEffect(()=>{\n        dispatch(authSuccess())\n    }, [dispatch])\n\n    return (\n        <div className=\"App\">\n            {auth ?\n                <>\n                    <h1>My ToDo List</h1>\n                    <Header/>\n                    <hr/>\n                    <TodoList/>\n                </> : <Auth/>\n            }\n            {isLoading && <Loader/>}\n        </div>\n    );\n}\n\nexport default App;\n//","import {combineReducers} from 'redux'\nimport {configureStore} from \"@reduxjs/toolkit\";\nimport AppReducer from './appReducer/AppReducer'\nimport TodoReducer from './todoReducer/TodoReducer'\nimport auth from './authReducer'\n\nconst rootReducer = combineReducers({\n    todo: TodoReducer,\n    app: AppReducer,\n    auth\n})\n\nconst store = configureStore({reducer: rootReducer})\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './todo_store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store} >\n    <App />\n    </Provider >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}